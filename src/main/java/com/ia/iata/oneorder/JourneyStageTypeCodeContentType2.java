//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2025.09.09 at 04:05:01 AM GST 
//


package com.ia.iata.oneorder;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for JourneyStageTypeCodeContentType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="JourneyStageTypeCodeContentType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="After Departure"/&gt;
 *     &lt;enumeration value="No Show"/&gt;
 *     &lt;enumeration value="Prior To Departure"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "JourneyStageTypeCodeContentType", namespace = "http://www.iata.org/IATA/2015/EASD/00/IATA_OffersAndOrdersCommonTypesFullyOptional")
@XmlEnum
public enum JourneyStageTypeCodeContentType2 {


    /**
     * After Departure
     *  Any time after a journey segment which was included in the offer/order item has taken place irrespective of whether the segment was flown or not. 
     *  
     * 
     */
    @XmlEnumValue("After Departure")
    AFTER_DEPARTURE("After Departure"),

    /**
     * No Show
     *  When passenger(s) have not turned up for any of the flights in the itinerary.
     * 
     */
    @XmlEnumValue("No Show")
    NO_SHOW("No Show"),

    /**
     * Prior to Departure
     *  Any time before the first flight segment but after payment received.
     * 
     */
    @XmlEnumValue("Prior To Departure")
    PRIOR_TO_DEPARTURE("Prior To Departure");
    private final String value;

    JourneyStageTypeCodeContentType2(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static JourneyStageTypeCodeContentType2 fromValue(String v) {
        for (JourneyStageTypeCodeContentType2 c: JourneyStageTypeCodeContentType2 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
